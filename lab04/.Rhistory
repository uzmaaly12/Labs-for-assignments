#intersect GB boundary data with the river data
Gb.rivers <- sf::st_intersection(Gb_boundry, River.GB)
Gb.rivers
#creating map for GB region
Gb.map <- tm_shape(Gb_boundry)+
tm_fill("DISTRICT",legend.show = FALSE, alpha = 0.9, lwd = 1.7)+
tm_shape(Gb_boundry) + tm_borders(col = "black", lwd = 1.5, lty = "solid")+
tm_text("DISTRICT")+
tm_shape(Gb.rivers) +
tm_lines(col = "blue",lwd = 1.8,lty = "solid",legend.col.show=TRUE)+
tm_layout(legend.position =c("right","center"))
Gb.map
#plotting the DEM for the GB region
glt.map <- tm_shape(GB.Dem) +
tm_raster(alpha = 0.28, palette = colorRampPalette(c("darkolivegreen4","yellow", "brown"))(12),
legend.show = F) + tm_compass(type = "8star", position = c("right", "top"), size = 2) +
tm_layout(main.title="  Rivers in Gilgit Baltistan, Pakistan", title.size = 1.1)
glt.map
#Adding vector and raster data (GB boundary map and DEM map)
Gb.map + glt.map
View(River.GB)
View(Gb.rivers)
View(River.GB)
View(Gb_boundry)
GLOF <- read_csv("../data/GLOF_data.csv")
GLOF <- read_csv("./data/GLOF_data.csv")
GLOF <- read_csv("./data/GLOF_data.csv")
#intersect GB boundary data with the river data
Gb.rivers <- sf::st_intersection(Gb_boundry, River.GB)
GLOF <- read_csv("./data/GLOF_data.csv")
GLOF <- read_csv("../data/GLOF_data.csv")
GLOF <- read_csv("../data/CBW/GLOF_data.csv")
GLOF <- read_csv("./data/CBW/GLOF_data.csv")
River.GB <- sf::read_sf("../data/waterways.shp")%>% sf::st_make_valid()
GLOF <- read_csv("../data/CBW/GLOF_data.csv")
GB.Dem <- raster("../data/Gb_dem.tif")
Gb_boundry <- sf::read_sf("../data/Gilgit_new_distric_boundry.shp")%>% sf::st_make_valid()
River.GB <- sf::read_sf("../data/waterways.shp")%>% sf::st_make_valid()
GLOF <- read_csv("../data/CBW/GLOF_data.csv")
#intersect GB boundary data with the river data
Gb.rivers <- sf::st_intersection(Gb_boundry, River.GB)
GLOF <- read_csv("../data/CBW/GLOF_data.csv")
GLOF <- read_csv("../data/CBW/GLOF_data.csv")
GLOF <- read_csv("../data/CBW/GLOF_data.csv")
library(tidyverse)
library(sf)
library(tmap)
library(stringr)
library(sp)
library(GISTools)
library(leaflet)
# spatial
counties <- sf::read_sf("../data/CBW/County_Boundaries.shp") %>% sf::st_make_valid()
#aspatial
bmps <- read_csv("../data/CBW/BMPreport2016_landbmps.csv")
crs = st_crs(counties)
bmpgroup <- bmps %>% group_by(GeographyName) %>% summarise(TotalBMPcost = sum(Cost, na.rm = T)) %>%
mutate(GEOID.Fixed = str_sub(GeographyName, 1,5))
join.groups <- left_join(counties, bmpgroup, by = c ("GEOID10" = "GEOID.Fixed"))
GB.Dem <- raster("../data/Gb_dem.tif")
Gb_boundry <- sf::read_sf("../data/Gilgit_new_distric_boundry.shp")%>% sf::st_make_valid()
River.GB <- sf::read_sf("../data/waterways.shp")%>% sf::st_make_valid()
GLOF <- read_csv("../data/CBW/GLOF_data.csv")
library(tidyverse)
library(sf)
library(sp)
library(raster)
library(dplyr)
library(spData)
library(spDataLarge)
library(tmap)    # for static and interactive maps
library(leaflet) # for interactive maps
library(ggplot2) # tidyverse data visualization package
library(GISTools)
library(grid)
GB.Dem <- raster("../data/Gb_dem.tif")
Gb_boundry <- sf::read_sf("../data/Gilgit_new_distric_boundry.shp")%>% sf::st_make_valid()
River.GB <- sf::read_sf("../data/waterways.shp")%>% sf::st_make_valid()
GLOF <- read_csv("../data/CBW/GLOF_data.csv")
#intersect GB boundary data with the river data
Gb.rivers <- sf::st_intersection(Gb_boundry, River.GB)
Gb.rivers
GLOF <- read_csv("../data/CBW/GLOF_data.csv")
GLOF <- read_csv("./data/CBW/GLOF_data.csv")
GLOF <- read_csv("../data/CBW/GLOF_data.csv")
View(GLOF)
View(Gb.rivers)
glof.gb <- Gb.rivers %>% group_by(D_NAME, na.rm = T)
join.c <- right_join(GLOF, glof.gb, by = c ("D_NAME"))
View(join.c)
join.c <- left_join(GLOF, glof.gb, by = c ("D_NAME"))
View(join.c)
View(River.GB)
View(Gb.rivers)
join.d <- left_join(GLOF, glof.gb, by = c ("D_NAME"))
View(join.d)
View(Gb.rivers)
View(River.GB)
abcgroup <- GLOF %>% group_by(D_NAME) %>% mutate( D_NAME, na.rm =T)
View(abcgroup)
View(River.GB)
View(join.c)
plot(join.c)
View(Gb_boundry)
library(tidyverse)
library(sf)
library(sp)
library(raster)
library(dplyr)
library(spData)
library(spDataLarge)
library(tmap)    # for static and interactive maps
library(leaflet) # for interactive maps
library(ggplot2) # tidyverse data visualization package
library(GISTools)
library(grid)
GB.Dem <- raster("../data/Gb_dem.tif")
Gb_boundry <- sf::read_sf("../data/Gilgit_new_distric_boundry.shp")%>% sf::st_make_valid()
River.GB <- sf::read_sf("../data/waterways.shp")%>% sf::st_make_valid()
GLOF <- read_csv("../data/CBW/GLOF_data.csv")
#intersect GB boundary data with the river data
Gb.rivers <- sf::st_intersection(Gb_boundry, River.GB)
glt <- merge(Gb_boundry, GLOF, by.x= "D_NAME", by.y = "D_NAME", na.rm= T)
View(glt)
glof.gb <- merge(Gb_boundry, GLOF, by.x= "D_NAME", by.y = "D_NAME", na.rm= T)
tm_shape(glof.gb) + tm_polygons()
#creating map for GB region
Gb.map <- tm_shape(Gb_boundry)+
tm_fill("DISTRICT",legend.show = FALSE, alpha = 0.9, lwd = 1.7)+
tm_shape(Gb_boundry) + tm_borders(col = "black", lwd = 1.5, lty = "solid")+
tm_text("DISTRICT")+
tm_shape(Gb.rivers) +
tm_lines(col = "blue",lwd = 1.8,lty = "solid",legend.col.show=TRUE)+
tm_layout(legend.position =c("right","center"))
Gb.map
#plotting the DEM for the GB region
glt.map <- tm_shape(GB.Dem) +
tm_raster(alpha = 0.28, palette = colorRampPalette(c("darkolivegreen4","yellow", "brown"))(12),
legend.show = F) + tm_compass(type = "8star", position = c("right", "top"), size = 2) +
tm_layout(main.title="  Rivers in Gilgit Baltistan, Pakistan", title.size = 1.1)
glt.map
#Adding vector and raster data (GB boundary map and DEM map)
Gb.map + glt.map
View(GLOF)
View(GLOF)
#creating map for GB region
Glf.map <- tm_shape(Gb_boundry)+
tm_fill("GLOF_region",legend.show = FALSE, alpha = 0.9, lwd = 1.7)+
tm_shape(Gb_boundry) + tm_borders(col = "black", lwd = 1.5, lty = "solid")+
tm_text("YEAR")+
tm_shape(glof.gb) +
tm_lines(col = "blue",lwd = 1.8,lty = "solid",legend.col.show=TRUE)+
tm_layout(legend.position =c("right","center"))
Glf.map
#creating map for GB region
Glf.map <- tm_shape(Gb_boundry)+
tm_fill("GLOF_region",legend.show = FALSE, alpha = 0.9, lwd = 1.7)+
tm_shape(Gb_boundry) + tm_borders(col = "black", lwd = 1.5, lty = "solid")+
tm_text("YEAR")+
tm_shape(Gb_boundry) +
tm_lines(col = "blue",lwd = 1.8,lty = "solid",legend.col.show=TRUE)+
tm_layout(legend.position =c("right","center"))
Glf.map
#creating map for GB region
Glf.map <- tm_shape(glof.gb)+
tm_fill("GLOF_Region",legend.show = FALSE, alpha = 0.9, lwd = 1.7)+
tm_shape(Gb_boundry) + tm_borders(col = "black", lwd = 1.5, lty = "solid")+
tm_text("GLOF_Region")+
tm_shape(glof.gb) +
tm_lines(col = "blue",lwd = 1.8,lty = "solid",legend.col.show=TRUE)+
tm_layout(legend.position =c("right","center"))
Glf.map
Glf.map
View(glof.gb)
#creating map for GB region
Glf.map <- tm_shape(glof.gb)+
tm_fill("GLOF_Region",legend.show = FALSE, alpha = 0.9, lwd = 1.7)+
tm_shape(Gb_boundry) + tm_borders(col = "black", lwd = 1.5, lty = "solid")+
tm_text("GLOF_Region")+
tm_shape(glof.gb) +
tm_lines(col = "blue",lwd = 1.8,lty = "solid",legend.col.show=TRUE)+
tm_layout(legend.position =c("right","center"))
Glf.map
#creating map for GB region
Glf.map <- tm_shape(glof.gb)+
tm_fill("GLOF_Region",legend.show = FALSE, alpha = 0.9, lwd = 1.7)+
tm_shape(Gb_boundry) + tm_borders(col = "black", lwd = 1.5, lty = "solid")+
tm_shape(glof.gb) +
tm_lines(col = "blue",lwd = 1.8,lty = "solid",legend.col.show=TRUE)+
tm_layout(legend.position =c("right","center"))
Glf.map
#creating map for GB region
Glf.map <- tm_shape(Gb_boundry)+
tm_fill("DISTRICT",legend.show = FALSE, alpha = 0.9, lwd = 1.7)+
tm_shape(Gb_boundry) + tm_borders(col = "black", lwd = 1.5, lty = "solid")+
tm_text("DISTRICT")+
tm_shape(glof.gb) +
tm_lines(col = "blue",lwd = 1.8,lty = "solid",legend.col.show=TRUE)+
tm_layout(legend.position =c("right","center"))
Glf.map
#creating map for GB region
Glf.map <- tm_shape(Gb_boundry)+
tm_fill("DISTRICT",legend.show = FALSE, alpha = 0.9, lwd = 1.7)+
tm_shape(Gb_boundry) + tm_borders(col = "black", lwd = 1.5, lty = "solid")+
tm_text("DISTRICT")+
tm_shape(glof.gb) +
tm_polygons()+
tm_layout(legend.position =c("right","center"))
Glf.map
#creating map for GB region
Glf.map <- tm_shape(Gb_boundry)+
tm_fill("DISTRICT",legend.show = FALSE, alpha = 0.9, lwd = 1.7)+
tm_shape(Gb_boundry) + tm_borders(col = "black", lwd = 1.5, lty = "solid")+
tm_text("DISTRICT")+
tm_shape(glof.gb) +
tm_points+
tm_layout(legend.position =c("right","center"))
#creating map for GB region
Glf.map <- tm_shape(Gb_boundry)+
tm_fill("DISTRICT",legend.show = FALSE, alpha = 0.9, lwd = 1.7)+
tm_shape(Gb_boundry) + tm_borders(col = "black", lwd = 1.5, lty = "solid")+
tm_text("DISTRICT")+
tm_shape(glof.gb) +
tm_points()+
tm_layout(legend.position =c("right","center"))
Glf.map <- tm_shape(glof.gb)+
tm_fill("GLOF_Region",legend.show = FALSE, alpha = 0.9, lwd = 1.7)
Glf.map
Glf.map <- tm_shape(glof.gb)+
tm_point(geometry)
#creating map for GB region
Glf.map <- tm_shape(glof.gb)+
tm_point("geometry")
Glf.map <- tm_shape(glof.gb)+
tm_point("Year")
Glf.map <- tm_shape(glof.gb)+
tm_dots("GLOF_Region")
Glf.map
#creating map for GB region
Glf.map <- tm_shape(glof.gb$GLOF_Region)+
tm_dots()
Glf.map
Glf.map <- tm_shape(glof.gb)+
tm_fill("GLOF_Region",legend.show = FALSE, alpha = 0.9, lwd = 1.7)
Glf.map
#creating map for GB region
Glf.map <- tm_shape(glof.gb)+
tm_fill("GLOF_Region",legend.show = FALSE, alpha = 0.3, lwd = 1.7)
Glf.map
#creating map for GB region
Glf.map <- tm_shape(glof.gb)+
tm_fill("GLOF_Region",legend.show = T, alpha = 0.7, lwd = 1.7)
Glf.map
#creating map for GB region
Glf.map <- tm_shape(glof.gb)+
tm_fill("River",legend.show = T, alpha = 0.7, lwd = 1.7)
Glf.map
View(glof.gb[[16]][[1]])
Gbglof <- sf::st_intersection(Gb_boundry, glof.gb)
Gbglof
plot(Gbglof)
tm_shape(Gbglof) + tm_polygons()
Gbglof <- sf::st_intersection(Gb_boundry, GLOF)
Gbglof <- sf::st_intersection(Gb_boundry, glof)
Gbglof
#creating map for GB region
Glf.map <- tm_shape(Gbglof)+
tm_fill("River",legend.show = T, alpha = 0.7, lwd = 1.7)
Glf.map
#creating map for GB region
Gb.map <- tm_shape(Gb_boundry)+
tm_fill("DISTRICT",legend.show = FALSE, alpha = 0.9, lwd = 1.7)+
tm_shape(Gb_boundry) + tm_borders(col = "black", lwd = 1.5, lty = "solid")+
tm_text("DISTRICT")+
tm_shape(Gb.rivers) +
tm_shape(glof.gb)+ tm_text("GLOF_region")+
tm_lines(col = "blue",lwd = 1.8,lty = "solid",legend.col.show=TRUE)+
tm_layout(legend.position =c("right","center"))
Gb.map
#creating map for GB region
Gb.map <- tm_shape(Gb_boundry)+
tm_fill("DISTRICT",legend.show = FALSE, alpha = 0.9, lwd = 1.7)+
tm_shape(Gb_boundry) + tm_borders(col = "black", lwd = 1.5, lty = "solid")+
tm_text("DISTRICT")+
tm_shape(Gb.rivers) +
tm_lines(col = "blue",lwd = 1.8,lty = "solid",legend.col.show=TRUE)+
tm_layout(legend.position =c("right","center"))+
tm_shape(glof.gb)+ tm_text("GLOF_region")
Gb.map
#creating map for GB region
Gb.map <- tm_shape(Gb_boundry)+
tm_fill("DISTRICT",legend.show = FALSE, alpha = 0.9, lwd = 1.7)+
tm_shape(Gb_boundry) + tm_borders(col = "black", lwd = 1.5, lty = "solid")+
tm_text("DISTRICT")+
tm_shape(Gb.rivers) +
tm_lines(col = "blue",lwd = 1.8,lty = "solid",legend.col.show=TRUE)+
tm_layout(legend.position =c("right","center"))+
tm_shape(glof.gb)+ tm_fill("GLOF_region")
Gb.map
#creating map for GB region
Gb.map <- tm_shape(Gb_boundry)+
tm_fill("DISTRICT",legend.show = FALSE, alpha = 0.9, lwd = 1.7)+
tm_shape(Gb_boundry) + tm_borders(col = "black", lwd = 1.5, lty = "solid")+
tm_text("DISTRICT")+
tm_shape(Gb.rivers) +
tm_lines(col = "blue",lwd = 1.8,lty = "solid",legend.col.show=TRUE)+
tm_layout(legend.position =c("right","center"))+
tm_shape(glof.gb)
Gb.map
#creating map for GB region
Gb.map <- tm_shape(Gb_boundry)+
tm_fill("DISTRICT",legend.show = FALSE, alpha = 0.9, lwd = 1.7)+
tm_shape(Gb_boundry) + tm_borders(col = "black", lwd = 1.5, lty = "solid")+
tm_text("DISTRICT")+
tm_shape(Gb.rivers) +
tm_lines(col = "blue",lwd = 1.8,lty = "solid",legend.col.show=TRUE)+
tm_layout(legend.position =c("right","center"))+
tm_shape(glof.gb, name = "GLOF_Region")+
Gb.map
#creating map for GB region
Gb.map <- tm_shape(Gb_boundry)+
tm_fill("DISTRICT",legend.show = FALSE, alpha = 0.9, lwd = 1.7)+
tm_shape(Gb_boundry) + tm_borders(col = "black", lwd = 1.5, lty = "solid")+
tm_text("DISTRICT")+
tm_shape(Gb.rivers) +
tm_lines(col = "blue",lwd = 1.8,lty = "solid",legend.col.show=TRUE)+
tm_layout(legend.position =c("right","center"))+
tm_shape(glof.gb, name = "GLOF_Region")+
Gb.map
#creating map for GB region
Gb.map <- tm_shape(Gb_boundry)+
tm_fill("DISTRICT",legend.show = FALSE, alpha = 0.9, lwd = 1.7)+
tm_shape(Gb_boundry) + tm_borders(col = "black", lwd = 1.5, lty = "solid")+
tm_text("DISTRICT")+
tm_shape(Gb.rivers) +
tm_lines(col = "blue",lwd = 1.8,lty = "solid",legend.col.show=TRUE)+
tm_layout(legend.position =c("right","center"))+
tm_shape(glof.gb, name = "GLOF_Region")+
Gb.map
Gb.map <- tm_shape(Gb_boundry)+
tm_fill("DISTRICT",legend.show = FALSE, alpha = 0.9, lwd = 1.7)+
tm_shape(Gb_boundry) + tm_borders(col = "black", lwd = 1.5, lty = "solid")+
tm_text("DISTRICT")+
tm_shape(Gb.rivers) +
tm_lines(col = "blue",lwd = 1.8,lty = "solid",legend.col.show=TRUE)+
tm_layout(legend.position =c("right","center"))+
tm_shape(glof.gb, name = "GLOF_Region")
Gb.map
#creating map for GB region
Gb.map <- tm_shape(Gb_boundry)+
tm_fill("DISTRICT",legend.show = FALSE, alpha = 0.9, lwd = 1.7)+
tm_shape(Gb_boundry) + tm_borders(col = "black", lwd = 1.5, lty = "solid")+
tm_text("DISTRICT")+
tm_shape(Gb.rivers) +
tm_lines(col = "blue",lwd = 1.8,lty = "solid",legend.col.show=TRUE)+
tm_layout(legend.position =c("right","center"))+
tm_shape(glof.gb)
Gb.map
#creating map for GB region
Gb.map <- tm_shape(Gb_boundry)+
tm_fill("DISTRICT",legend.show = FALSE, alpha = 0.9, lwd = 1.7)+
tm_shape(Gb_boundry) + tm_borders(col = "black", lwd = 1.5, lty = "solid")+
tm_text("DISTRICT")+
tm_shape(Gb.rivers) +
tm_lines(col = "blue",lwd = 1.8,lty = "solid",legend.col.show=TRUE)+
tm_layout(legend.position =c("right","center"))+
tm_shape(glof.gb)+tm_polygons()
Gb.map
#creating map for GB region
Gb.map <- tm_shape(Gb_boundry)+
tm_fill("DISTRICT",legend.show = FALSE, alpha = 0.9, lwd = 1.7)+
tm_shape(Gb_boundry) + tm_borders(col = "black", lwd = 1.5, lty = "solid")+
tm_text("DISTRICT")+
tm_shape(Gb.rivers) +
tm_lines(col = "blue",lwd = 1.8,lty = "solid",legend.col.show=TRUE)+
tm_layout(legend.position =c("right","center"))+
tm_shape(Gbglof)+tm_polygons()
Gb.map
#creating map for GB region
Gb.map <- tm_shape(Gb_boundry)+
tm_fill("DISTRICT",legend.show = FALSE, alpha = 0.9, lwd = 1.7)+
tm_shape(Gb_boundry) + tm_borders(col = "black", lwd = 1.5, lty = "solid")+
tm_text("DISTRICT")+
tm_shape(Gb.rivers) +
tm_lines(col = "blue",lwd = 1.8,lty = "solid",legend.col.show=TRUE)+
tm_layout(legend.position =c("right","center"))
Gb.map
#creating map for GB region
Glf.map <- tm_shape(Gbglof)+
tm_fill("River",legend.show = T, alpha = 0.7, lwd = 1.7)
Glf.map
#creating map for GB region
Glf.map <- tm_shape(Gbglof)+
tm_fill("River",legend.show = T, alpha = 0.7, lwd = 1.7) +
tm_text("DISTRICT")+
tm_shape(glof.gb) +
tm_lines(col = "blue",lwd = 1.8,lty = "solid",legend.col.show=TRUE)+
tm_layout(legend.position =c("right","center"))
Glf.map
#creating map for GB region
Glf.map <- tm_shape(Gbglof)+
tm_fill("River",legend.show = T, alpha = 0.7, lwd = 1.7) +
tm_text("DISTRICT")+
tm_shape(Gb.rivers) +
tm_lines(col = "blue",lwd = 1.8,lty = "solid",legend.col.show=TRUE)+
tm_layout(legend.position =c("right","center"))
Glf.map
Gbglof
glof
Gbglof <- sf::st_intersection(Gb_boundry, GLOF)
Gbglof <- sf::st_intersection(Gb_boundry, glof.gb)
Gbglof
m.glf <- glof.gb %>% mutate(GLOF_Region= River)
m.glf
View(m.glf)
m.glf <- glof.gb %>%  mutate(River= GLOF_Region)
m.glf
#creating map for GLOF region
Glf.map <- tm_shape(Gbglof)+
tm_fill("River",legend.show = T, alpha = 0.7, lwd = 1.7) +
tm_text("DISTRICT")+
tm_shape(Gb.rivers) +
tm_lines(col = "blue",lwd = 1.8,lty = "solid",legend.col.show=TRUE)+
tm_layout(legend.position =c("right","center"))
Glf.map
#creating map for GLOF region
Glf.map <- tm_shape(Gbglof)+
tm_fill("River",legend.show = T, alpha = 0.7, lwd = 1.7) +
tm_text("River")+
tm_shape(Gb.rivers) +
tm_lines(col = "blue",lwd = 1.8,lty = "solid",legend.col.show=TRUE)+
tm_layout(legend.position =c("right","center"))
Glf.map
#creating map for GLOF region
Glf.map <- tm_shape(m.glf)+
tm_fill("River",legend.show = T, alpha = 0.7, lwd = 1.7) +
tm_text("River")+
tm_shape(Gb.rivers) +
tm_lines(col = "blue",lwd = 1.8,lty = "solid",legend.col.show=TRUE)+
tm_layout(legend.position =c("right","center"))
Glf.map
Glf.map <- tm_shape(m.glf)+
tm_fill("River",legend.show = T, alpha = 0.7, lwd = 1.7)
Glf.map
#creating map for GLOF region
Glf.map <- tm_shape(Gbglof)+
tm_fill("River",legend.show = T, alpha = 0.7, lwd = 1.7) +
tm_text("River")+
tm_shape(Gb.rivers) +
tm_lines(col = "blue",lwd = 1.8,lty = "solid",legend.col.show=TRUE)+
tm_layout(legend.position =c("right","center"))
Glf.map
#creating map for GLOF region
Glf.map <- tm_shape(Gbglof)+
tm_fill("River",legend.show = T, alpha = 0.7, lwd = 1.7) +
tm_text("GLOF_Region")+
tm_shape(Gb.rivers) +
tm_lines(col = "blue",lwd = 1.8,lty = "solid",legend.col.show=TRUE)+
tm_layout(legend.position =c("right","center"))
Glf.map
#creating map for GLOF region
Glf.map <- tm_shape(Gbglof)+
tm_fill("DISTRICT",legend.show = T, alpha = 0.7, lwd = 1.7) +
tm_text("GLOF_Region")+
tm_shape(Gb.rivers) +
tm_lines(col = "blue",lwd = 1.8,lty = "solid",legend.col.show=TRUE)+
tm_layout(legend.position =c("right","center"))
Glf.map
#creating map for GLOF region
Glf.map <- tm_shape(Gbglof)+
tm_fill("DISTRICT",legend.show = T, alpha = 0.7, lwd = 1.7) +
tm_text("Year")+
tm_shape(Gb.rivers) +
tm_lines(col = "blue",lwd = 1.8,lty = "solid",legend.col.show=TRUE)+
tm_layout(legend.position =c("right","center"))
Glf.map
abc <- Gbglof$River <- starts_with(Hunza)
abc <- Gbglof$River <- starts_with("Hunza")
abc <- Gbglof$River <- stringr::starts_with("Hunza")
abc <- Gbglof %>% dplyr::filter(., str_detect( River, "Hunza"))
library(stringr)
library(GISTools)
abc <- Gbglof %>% dplyr::filter(., str_detect( River, "Hunza"))
abc <- glof.gb %>% dplyr::filter(., str_detect( River, "Hunza Nagar"))
library(tidyverse)
library(sf)
library(sp)
library(raster)
library(dplyr)
library(spData)
library(spDataLarge)
library(tmap)    # for static and interactive maps
library(leaflet) # for interactive maps
library(ggplot2) # tidyverse data visualization package
library(GISTools)
library(grid)
library(stringr)
library(GISTools)
GB.Dem <- raster("../data/Gb_dem.tif")
Gb_boundry <- sf::read_sf("../data/Gilgit_new_distric_boundry.shp")%>% sf::st_make_valid()
River.GB <- sf::read_sf("../data/waterways.shp")%>% sf::st_make_valid()
GLOF <- read_csv("../data/CBW/GLOF_data.csv")
#intersect GB boundary data with the river data
Gb.rivers <- sf::st_intersection(Gb_boundry, River.GB)
Gb.rivers
glof.gb <- merge(Gb_boundry, GLOF, by.x= "D_NAME", by.y = "D_NAME", na.rm= T)
Gbglof <- sf::st_intersection(Gb_boundry, glof.gb)
abc <- glof.gb %>% dplyr::filter(., str_detect( River, "Hunza Nagar"))
abc
View(abc)
abc <- glof.gb %>% dplyr::filter(., str_detect( River, "Hunza Nagar", na.rm = T))
abc
